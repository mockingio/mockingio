name: "Auto Release"
concurrency: release
on:
  schedule:
    - cron: "6 17 * * 2"
  workflow_dispatch:
    inputs:
      release_type:
        description: "major|minor|patch|release|prerel"
        default: "patch"
        required: true
      release_version:
        description: "Optional release version, e.g. 0.2.0"
        required: false
jobs:
  auto-release:
    name: "Auto Release"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dagger
        run: |
          if ! command -v dagger &> /dev/null
          then
            cd /usr/local && curl -L https://dl.dagger.io/dagger/install.sh | sh
          fi
      - name: Dagger
        uses: dagger/dagger-for-github@v3
        with:
          cmds: |
            do build
      - name: "Install Go"
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Run coverage # later will be moved into dagger
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Create next release tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMVER_BUMP: ${{ github.event.inputs.release_type }}
        run: |
          if [[ -n "${{ github.event.inputs.release_version }}" ]]
          then
            next_release_version="v${{ github.event.inputs.release_version }}"
          else
            previous_release_version="$(gh api /repos/:owner/:repo/releases --jq '.[0].tag_name')"
            echo "PREVIOUS RELEASE VERSION: $previous_release_version"
            next_release_version="v$(./semver bump ${SEMVER_BUMP:=patch}  $previous_release_version)"
          fi
          echo "NEXT RELEASE VERSION: $next_release_version"
          gh api -X POST /repos/:owner/:repo/git/refs \
            --field ref="refs/tags/$next_release_version" \
            --field sha="$GITHUB_SHA"
      - name: "Fetch new tag"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Release"
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist --debug
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}